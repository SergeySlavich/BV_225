https://github.com/okovtun/BV_225.git
https://www.youtube.com/watch?v=owJLioIXPds&list=PLeqyOOqxeiIOn6FFT2a2xBVF9UpViJ-WH

TODO:
От ветки dynamic_templated создать ветку dynamic_templates_optimisation, и в этой ветке
оптимизировать функции для двумерных массивов, используя функции для одномерных массивов.

DONE:
В проект DynamicMemory добавить следующие функции:
	??? allocate(???);			//выделяет память для двумерного динамического массива				DONE
	??? clear(???);				//освобождает память, занимаемую двумерным динамическим массивом	DONE
	??? push_row_front(???);	//добавляет строку в начало массива
	??? insert_row(???);		//вставляет строку в массив по указанному индексу

	??? pop_row_back(???);		//удаляет последнюю строку из двумерного массива
	??? pop_row_front(???);		//удаляет нулевую строку из двумерного массива
	??? erase_row(???);			//удаляет строку из двумерного массива по указанному индексу

DONE:
1. Выучить теорию по указателям.
2. В проект DynamicMemory добавить следующие функции:
	??? insert(???);	//вставляет в массив указанное значение по указанному индексу
	??? pop_back(???);	//удаляет последний элемент из массива
	??? pop_front(???);	//удаляет нудевой элемент массива
	??? erase(???);		//удаляет элемент по указанному индексу

TOREAD:
https://www.softelectro.ru/ieee754.html
https://www.ixbt.com/cpu/x86-cpu-faq-2006.shtml
https://www.ixbt.com/cpu/cpu-digest-2009.shtml

Book:
https://drive.google.com/drive/folders/1mIhAKMp5-Jpy6s5X8u924tRCXFEdHE_z
https://github.com/AllonsiWho/Book

TODO:
1. В ветке templated шаблонизировать все функции кроме FillRand();
2. От ветки templated создать ветку templated_separation, и в ней, вынести шаблонные функции в отдельные файлы; 

DONE:
В проекте Functions\Arrays все сущестующие функции перегрузить для двумерных массивов 
типа double, float и char.

DONE:
1. Написать рекурсивную функцию, которая принимает число, и возвращает Факториал этого числа;
2. Написать Рекурсивную функцию, которая возводит число в степень;
3. Написать рекурсивную функцию, которая выводит на экран ряд Фибоначчи до заданного предела;
4. Написать рекурсивную функцию, которая выводит на экран заданное количество членов из ряда Фибоначчи;

TODO:
1. В Solution Functions добавить проект Arrays, и в нем реализовать следующие функции:
	??? FillRand(???);	//заполняет массив случайными числами в заданном диапазоне	DONE
						//(диапазон по умолчанию от 0 до 100)
	??? Print(???);		//выводит массив на экран									DONE
	??? Sum(???);		//ВОЗВРАЩАЕТ сумму элементов массива						DONE
	??? Avg(???);		//ВОЗВРАЩАЕТ среднее-арифметическое элементов массива		DONE
	??? minValueIn(???);//возвращает минимальное значение из массива				DONE
	??? maxValueIn(???);//возвращает максимальное значение из массива				DONE

	??? shiftLeft(???);	//выполняет циклический сдвиг массива на заданное число элементов влево		DOME
	??? shiftRight(???);//выполняет циклический сдвиг массива на заданное число элементов вправо	DOME
	??? Sort(???);		//выполняет сортировку массива в порядке возрастания		DONE
	??? UniqueRand(???);//заполняет массив уникальными случайными числами в заданном диапазоне
	??? Search(???);	//находит в массиве повторяюшиеся значения, выводит их на экран,
						//и выводит на экран количество повторений

2. Перегрузить функции в проекте Functions\Arrays для типов данных double, float и char,
   написать проверочный код для всех типов;


DONE:
0. Выучить теорию по функциям!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
1. В проект Functions добавить функцию ??? Power(???), которая возводит указанное число 
   в указанную степень;

TODO:
1. В проекте Random обеспечить генерацию случайных чисел в заданном диапазоне,
   который пользователь вводит с клавиатуры;
2. В проекте Random массив, заполненный случайными числами отсортировать в порядке возрастания
   и вывести на экран отсортированный массив;
3. В Solution Arrays добавить проект UniqueRandom, и в этом проекте заполнить массив из десяти элементов
   униакльными случайными числами в диапазоне от 70 до 80;

DONE:
1. Есть массив из десяти элементов, проинициализированный рядом чисел
	1	2	3	4	5	6	7	8	9	10
   Необходимо выполнить циклический сдвиг влево массива на заданное число элементов.
	2	3	4	5	6	7	8	9	10	1
	3	4	5	6	7	8	9	10	1	2
	4	5	6	7	8	9	10	1	2	3
2. Выполнить циклический сдвиг массива вправо, на заданное число элементов;
3. Десятичное число, введенное с клавиатуры перевести в двоичную систему счисления;
4. Десятичное число, введенное с клавиатуры перевести в шестнадцатеричную систему счисления;
	Алгоритм перевода Dec в Bin и Hex здесь:
	https://github.com/okovtun/BV_225/blob/master/DataTypes/NumericSystems.pdf

DONE:
1. Ввести значения элементов массива с клавиатуры;	DONE
2. Вывести массив на экран;							DONE
3. Вывести массив на экран в обратном порядке;		DONE
4. Вычислить сумму элементов массива;				DONE
5. Вычислить сумму среднее-арифметическое массива;	DONE
6. Найти минимальное значение в массиве;			DONE
7. Найти максимальное значение в массиве;			DONE

DONE:
Выбрать пять любых проектов, сделать из них репозитории и залить эти репозитории на GitHub.
В качестве отчета прислать ссылку на свой GitHub;

DONE:
1. Вывести на экран таблицу Пифагора;
2. Используя вложенные циклы вывести на экран следующие фигуры:
   https://github.com/okovtun/BV_011/blob/master/ControlStructures/Geometria/Task/Geometria1.txt
   Размер фигуры должен вводить пользователь.
3. https://github.com/okovtun/BV_011/blob/master/ControlStructures/Geometria/Task/ChessBoard.jpg
4. https://github.com/okovtun/BV_011/blob/master/ControlStructures/Geometria/Task/HardChess.jpg

DONE:
1. Пользователь вводит число с клавиатуры, а программа вычисляет факториал этого числа;
	5! = 1*2*3*4*5 = 120;
2. Пользователь вводит с клавиатуры два числа - оснвание и показатель степени, 
   и программа возводит число в степень;
3. Вывести на экран таблицу ASCII-символов по 16 символов в строке,
   символы должны разделяться пробелом;
4. Вывести на экран ряд Фибоначчи до указанного предела.
   Предел вводит пользователь с клавиатуры;
   Например до 10:
	0	1	1	2	3	5	8	//13 уже НЕ выводится
5. Вывести на экран заданное количество чисел из ряда Фибоначчи;
   Например 10 чисел:
	0	1	1	2	3	5	8	13	21	34
6. Вывести на экран ряд простых чисел до указанного предела.
   Простым называется число, которое делится только на себя и на 1.

DONE:
1. Написать программу Shooter, которая по нажатой клавише определяет действие пользователя:
	w - вперед
	s - назад
	a - влево
	d - вправо
	space - прыжок
	enter - огонь
	Если ползователь нажал не ту клавишу, на экран выводится Error.

DONE:
1. Пользователь вводит число. Программа говорит, является ли введенное число палиндромом.
   Палиндром - это число, которое читается одинаково, как слева направо, так и справа налево.

DONE:
1. Написать такой же калькулятор, только при помощи switch;
2. Ползователь вводит номер автобусного билета, и программа должна сказать,
   этот билет счастливый или обычный;

DONE:
Написать программу "Калькулятор", которая принимает выражение вида
	2 + 3
и выдает результат следующим образом:
	2 + 3 = 5

DONE:
Что будет выведено на экран в седующиъх случаях:
1.	int i = 3;
	i = ++i + ++i;
	cout << i << endl;
2.	int i = 3;
	i = i++ + 1 + ++i * 2;
	cout << i << endl;
3.	int i = 3;
	i = ++i + 1 + ++i *= 2;
	cout << i << endl;
4.	int i = 3;
	i += ++i + 1 + ++i *= 2;
	cout << i << endl;
!!!!!!!!!! Все эти задачи нужно решать без Visual Studio, и в VS лишь проверять результат.
Результаты на каждую задачу прислать в текстовом файле!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

DONE:
Решить все задачи из файла: https://raw.githubusercontent.com/okovtun/BV_225/master/DataTypes/VariablesTask.pdf


DONE:
1. Выучить теорию по типам данных!!!!!!!!!!!!!!!!!!!!!!!!!
----------------------------------------------------------
2. Используя оператор sizeof() и макроопределения Visual Studio
   вывести на экран объем занимаемой памяти и диапазоны принимаемых значений
   все целочисленных типов данных.
3. *Поменять местами две переменные:
	int a=2;
	int b=3;
	cout << a << "\t" << b << endl; //	2	3
	....
	код, меняющий местами переменные a и b
	....
	cout << a << "\t" << b << endl; //	3	2
4. Решить все задачи из файла: https://raw.githubusercontent.com/okovtun/BV_225/master/DataTypes/VariablesTask.pdf

TODO:
1. Выучить теорию!
2. Создать проект Elochka, и в этом проэкте вывести в консоль стишок
   "В лесу родилась Ёлочка". Стишок должен быть выровнен по середине экрана,
   и его куплеты должны быть разделены пустой строкой;

TOREAD:
https://en.cppreference.com/w/c/language/escape
https://docs.microsoft.com/en-us/cpp/c-language/escape-sequences?view=msvc-170